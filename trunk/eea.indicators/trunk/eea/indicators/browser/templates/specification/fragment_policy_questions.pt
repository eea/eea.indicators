<tal:def tal:define="region_name string:policy_questions_area;
	region_update_handler string:fragment_policy_questions;
	also_reload python:['assessments_area'];">

	<metal:macro metal:use-macro="context/indicators_macros/macros/active_region">
		<metal:slot metal:fill-slot="content" tal:define="questions python:here.objectValues('PolicyQuestion')" >
			<div class="logic_group">
				<h2 class="policy_questions">Policy Questions</h2>
				<tal:defs tal:define="
					check_question python:lambda o:o.getIs_key_question();
					main_question python:filter(check_question, questions)">
					<div class="portalMessage"
						tal:condition="python:not((main_question and questions) or main_question)">
						You need to have at least one main Policy Question
					</div>
				</tal:defs>
				<div class="grouped_field">

					<a href='./object_factory?type_name=PolicyQuestion' class="object_creator">+ Policy Question</a>

					<div id="policy_questions" class="sortable_spec" tal:condition="questions">
						<div class="metadata">
							<span class="handler"
								tal:content="string:${context/absolute_url}/change_order"></span>
						</div>
						<div tal:repeat="question questions"
							class="list-item" tal:attributes="id question/getId">
							<span title="Drag & drop to set order"
								class="handler ui-icon ui-icon-arrowthick-2-n-s"></span>
							<a href=""
								class="schemata_edit spec_control"
								tal:attributes="href string:${question/absolute_url}/schemata_edit?fieldset=default">Edit</a>
							<a href=""
								class="object_delete spec_control"
								tal:attributes="href string:${question/aq_parent/absolute_url}/@@object_delete?id=${question/getId}">Delete</a>
							<strong tal:content="question/Title">Question title</strong>
							<span tal:condition="question/getIs_key_question">(Main question)</span>
						</div>
					</div>

				</div>
			</div>
		</metal:slot>
	</metal:macro>

</tal:def>
